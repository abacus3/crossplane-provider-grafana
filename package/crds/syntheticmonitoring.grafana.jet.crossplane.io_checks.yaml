apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: checks.syntheticmonitoring.grafana.jet.crossplane.io
spec:
  group: syntheticmonitoring.grafana.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafanajet
    kind: Check
    listKind: CheckList
    plural: checks
    singular: check
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Check is the Schema for the Checks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CheckSpec defines the desired state of Check
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  alertSensitivity:
                    description: Can be set to `none`, `low`, `medium`, or `high`
                      to correspond to the check [alert levels](https://grafana.com/docs/grafana-cloud/synthetic-monitoring/synthetic-monitoring-alerting/).
                    type: string
                  basicMetricsOnly:
                    description: Metrics are reduced by default. Set this to `false`
                      if you'd like to publish all metrics. We maintain a [full list
                      of metrics](https://github.com/grafana/synthetic-monitoring-agent/tree/main/internal/scraper/testdata)
                      collected for each.
                    type: boolean
                  enabled:
                    description: Whether to enable the check.
                    type: boolean
                  frequency:
                    description: How often the check runs in milliseconds (the value
                      is not truly a "frequency" but a "period"). The minimum acceptable
                      value is 1 second (1000 ms), and the maximum is 120 seconds
                      (120000 ms).
                    format: int64
                    type: integer
                  job:
                    description: Name used for job label.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Custom labels to be included with collected metrics
                      and logs. The maximum number of labels that can be specified
                      per check is 5. These are applied, along with the probe-specific
                      labels, to the outgoing metrics. The names and values of the
                      labels cannot be empty, and the maximum length is 32 bytes.
                    type: object
                  probes:
                    description: List of probe location IDs where this target will
                      be checked from.
                    items:
                      format: int64
                      type: integer
                    type: array
                  settings:
                    description: Check settings. Should contain exactly one nested
                      block.
                    items:
                      properties:
                        dns:
                          description: Settings for DNS check. The target must be
                            a valid hostname (or IP address for `PTR` records).
                          items:
                            properties:
                              ipVersion:
                                description: Options are `V4`, `V6`, `Any`. Specifies
                                  whether the corresponding check will be performed
                                  using IPv4 or IPv6. The `Any` value indicates that
                                  IPv6 should be used, falling back to IPv4 if that's
                                  not available.
                                type: string
                              port:
                                description: Port to target.
                                format: int64
                                type: integer
                              protocol:
                                description: '`TCP` or `UDP`.'
                                type: string
                              recordType:
                                description: One of `ANY`, `A`, `AAAA`, `CNAME`, `MX`,
                                  `NS`, `PTR`, `SOA`, `SRV`, `TXT`.
                                type: string
                              server:
                                description: DNS server address to target.
                                type: string
                              sourceIpAddress:
                                description: Source IP address.
                                type: string
                              validRCodes:
                                description: List of valid response codes. Options
                                  include `NOERROR`, `BADALG`, `BADMODE`, `BADKEY`,
                                  `BADCOOKIE`, `BADNAME`, `BADSIG`, `BADTIME`, `BADTRUNC`,
                                  `BADVERS`, `FORMERR`, `NOTIMP`, `NOTAUTH`, `NOTZONE`,
                                  `NXDOMAIN`, `NXRRSET`, `REFUSED`, `SERVFAIL`, `YXDOMAIN`,
                                  `YXRRSET`.
                                items:
                                  type: string
                                type: array
                              validateAdditionalRrs:
                                description: Validate additional matches.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                    failIfNotMatchesRegexp:
                                      description: Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              validateAnswerRrs:
                                description: Validate response answer.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                    failIfNotMatchesRegexp:
                                      description: Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              validateAuthorityRrs:
                                description: Validate response authority.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                    failIfNotMatchesRegexp:
                                      description: Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        http:
                          description: Settings for HTTP check. The target must be
                            a URL (http or https).
                          items:
                            properties:
                              basicAuth:
                                description: Basic auth settings.
                                items:
                                  properties:
                                    password:
                                      description: Basic auth password.
                                      type: string
                                    username:
                                      description: Basic auth username.
                                      type: string
                                  required:
                                  - password
                                  - username
                                  type: object
                                type: array
                              bearerToken:
                                description: Token for use with bearer authorization
                                  header.
                                type: string
                              body:
                                description: The body of the HTTP request used in
                                  probe.
                                type: string
                              cacheBustingQueryParamName:
                                description: The name of the query parameter used
                                  to prevent the server from using a cached response.
                                  Each probe will assign a random value to this parameter
                                  each time a request is made.
                                type: string
                              failIfBodyMatchesRegexp:
                                description: List of regexes. If any match the response
                                  body, the check will fail.
                                items:
                                  type: string
                                type: array
                              failIfBodyNotMatchesRegexp:
                                description: List of regexes. If any do not match
                                  the response body, the check will fail.
                                items:
                                  type: string
                                type: array
                              failIfHeaderMatchesRegexp:
                                description: Check fails if headers match.
                                items:
                                  properties:
                                    allowMissing:
                                      description: Allow header to be missing from
                                        responses.
                                      type: boolean
                                    header:
                                      description: Header name.
                                      type: string
                                    regexp:
                                      description: Regex that header value should
                                        match.
                                      type: string
                                  required:
                                  - header
                                  - regexp
                                  type: object
                                type: array
                              failIfHeaderNotMatchesRegexp:
                                description: Check fails if headers do not match.
                                items:
                                  properties:
                                    allowMissing:
                                      description: Allow header to be missing from
                                        responses.
                                      type: boolean
                                    header:
                                      description: Header name.
                                      type: string
                                    regexp:
                                      description: Regex that header value should
                                        match.
                                      type: string
                                  required:
                                  - header
                                  - regexp
                                  type: object
                                type: array
                              failIfNotSsl:
                                description: Fail if SSL is not present.
                                type: boolean
                              failIfSsl:
                                description: Fail if SSL is present.
                                type: boolean
                              headers:
                                description: The HTTP headers set for the probe.
                                items:
                                  type: string
                                type: array
                              ipVersion:
                                description: Options are `V4`, `V6`, `Any`. Specifies
                                  whether the corresponding check will be performed
                                  using IPv4 or IPv6. The `Any` value indicates that
                                  IPv6 should be used, falling back to IPv4 if that's
                                  not available.
                                type: string
                              method:
                                description: Request method. One of `GET`, `CONNECT`,
                                  `DELETE`, `HEAD`, `OPTIONS`, `POST`, `PUT`, `TRACE`
                                type: string
                              noFollowRedirects:
                                description: Do not follow redirects.
                                type: boolean
                              proxyUrl:
                                description: Proxy URL.
                                type: string
                              tlsConfig:
                                description: TLS config.
                                items:
                                  properties:
                                    caCert:
                                      description: CA certificate in PEM format.
                                      type: string
                                    clientCert:
                                      description: Client certificate in PEM format.
                                      type: string
                                    clientKeySecretRef:
                                      description: Client key in PEM format.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    insecureSkipVerify:
                                      description: Disable target certificate validation.
                                      type: boolean
                                    serverName:
                                      description: Used to verify the hostname for
                                        the targets.
                                      type: string
                                  type: object
                                type: array
                              validHttpVersions:
                                description: List of valid HTTP versions. Options
                                  include `HTTP/1.0`, `HTTP/1.1`, `HTTP/2`
                                items:
                                  type: string
                                type: array
                              validStatusCodes:
                                description: Accepted status codes. If unset, defaults
                                  to 2xx.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                            type: object
                          type: array
                        ping:
                          description: Settings for ping (ICMP) check. The target
                            must be a valid hostname or IP address.
                          items:
                            properties:
                              dontFragment:
                                description: Set the DF-bit in the IP-header. Only
                                  works with ipV4.
                                type: boolean
                              ipVersion:
                                description: Options are `V4`, `V6`, `Any`. Specifies
                                  whether the corresponding check will be performed
                                  using IPv4 or IPv6. The `Any` value indicates that
                                  IPv6 should be used, falling back to IPv4 if that's
                                  not available.
                                type: string
                              payloadSize:
                                description: Payload size.
                                format: int64
                                type: integer
                              sourceIpAddress:
                                description: Source IP address.
                                type: string
                            type: object
                          type: array
                        tcp:
                          description: Settings for TCP check. The target must be
                            of the form `<host>:<port>`, where the host portion must
                            be a valid hostname or IP address.
                          items:
                            properties:
                              ipVersion:
                                description: Options are `V4`, `V6`, `Any`. Specifies
                                  whether the corresponding check will be performed
                                  using IPv4 or IPv6. The `Any` value indicates that
                                  IPv6 should be used, falling back to IPv4 if that's
                                  not available.
                                type: string
                              queryResponse:
                                description: The query sent in the TCP probe and the
                                  expected associated response.
                                items:
                                  properties:
                                    expect:
                                      description: Response to expect.
                                      type: string
                                    send:
                                      description: Data to send.
                                      type: string
                                    startTls:
                                      description: Upgrade TCP connection to TLS.
                                      type: boolean
                                  required:
                                  - expect
                                  - send
                                  type: object
                                type: array
                              sourceIpAddress:
                                description: Source IP address.
                                type: string
                              tls:
                                description: Whether or not TLS is used when the connection
                                  is initiated.
                                type: boolean
                              tlsConfig:
                                description: TLS config.
                                items:
                                  properties:
                                    caCert:
                                      description: CA certificate in PEM format.
                                      type: string
                                    clientCert:
                                      description: Client certificate in PEM format.
                                      type: string
                                    clientKeySecretRef:
                                      description: Client key in PEM format.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    insecureSkipVerify:
                                      description: Disable target certificate validation.
                                      type: boolean
                                    serverName:
                                      description: Used to verify the hostname for
                                        the targets.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        traceroute:
                          description: Settings for traceroute check. The target must
                            be a valid hostname or IP address
                          items:
                            properties:
                              maxHops:
                                description: Maximum TTL for the trace
                                format: int64
                                type: integer
                              maxUnknownHops:
                                description: Maximum number of hosts to travers that
                                  give no response
                                format: int64
                                type: integer
                              ptrLookup:
                                description: Reverse lookup hostnames from IP addresses
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  target:
                    description: Hostname to ping.
                    type: string
                  timeout:
                    description: Specifies the maximum running time for the check
                      in milliseconds. The minimum acceptable value is 1 second (1000
                      ms), and the maximum 10 seconds (10000 ms).
                    format: int64
                    type: integer
                required:
                - job
                - probes
                - settings
                - target
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: CheckStatus defines the observed state of Check.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  tenantId:
                    format: int64
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
